language: python

services:
  - docker

before_script: pip install docker-compose

script:
  # since there's a dependency on mongo, it will build that image also
  # although we have not added any tests scenario
  - docker-compose run service-2 sh -c "pytest"

after_success:
  - if [[ "$TRAVIS_BRANCH" == "aws_deployment" ]]; then
      docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD ;
      docker-compose build ;
      docker tag service-1 $DOCKER_USERNAME/flask-service1-aws
      docker tag service-2 $DOCKER_USERNAME/flask-service2-aws
      docker tag mongo $DOCKER_USERNAME/flask-mongo-aws
      docker tag nginx $DOCKER_USERNAME/flask-nginx-aws
    fi

deploy:
  provider: elasticbeanstalk
  region: us-east-2
  app: flask-app
  env: FlaskApp-env-1
  bucket-name: elasticbeanstalk-us-east-2-126562325494
  bucket-path: flask-app
  on:
    branch: aws_deployment
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
